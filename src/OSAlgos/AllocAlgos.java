/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OSAlgos;

import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Dan
 */
public class AllocAlgos extends javax.swing.JFrame {

    /**
     * Creates new form AllocAlgos
     */
    public AllocAlgos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void clearAll(){
        txt_ProcessName.setText("");
        txt_ProcessCycles.setText("");
        txt_Quantum.setText("");
        txt_Console.setText("Process List cleared!");
    }
    
    String processName;
    int processCycles = -1;
    int priority = -1;
    int arrivalTime = -1;
    String algo = "choose...";
    int quantum = 1;
    ArrayList<Process> processList = new ArrayList<>();
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_ProcessName = new javax.swing.JLabel();
        txt_ProcessName = new javax.swing.JTextField();
        lbl_ProcessCycles = new javax.swing.JLabel();
        txt_ProcessCycles = new javax.swing.JTextField();
        btn_AddProcess = new javax.swing.JButton();
        btn_Clear = new javax.swing.JButton();
        btn_View = new javax.swing.JButton();
        lbl_Priority = new javax.swing.JLabel();
        cb_Prio = new javax.swing.JComboBox<>();
        cb_ArrivalTime = new javax.swing.JComboBox<>();
        lbl_ArrivalTime = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cb_Algo = new javax.swing.JComboBox<>();
        btn_Go = new javax.swing.JButton();
        lbl_Quantum = new javax.swing.JLabel();
        txt_Quantum = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Console = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lbl_ProcessName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_ProcessName.setText("Process Name");
        lbl_ProcessName.setPreferredSize(new java.awt.Dimension(80, 25));

        txt_ProcessName.setMinimumSize(new java.awt.Dimension(10, 30));
        txt_ProcessName.setName("txt_Name"); // NOI18N
        txt_ProcessName.setPreferredSize(new java.awt.Dimension(100, 30));
        txt_ProcessName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ProcessNameFocusLost(evt);
            }
        });

        lbl_ProcessCycles.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_ProcessCycles.setText("Process Cycles");
        lbl_ProcessCycles.setPreferredSize(new java.awt.Dimension(80, 25));

        txt_ProcessCycles.setName("txt_Cycles"); // NOI18N
        txt_ProcessCycles.setPreferredSize(new java.awt.Dimension(100, 30));
        txt_ProcessCycles.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ProcessCyclesFocusLost(evt);
            }
        });

        btn_AddProcess.setText("Add Process");
        btn_AddProcess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_AddProcessMouseClicked(evt);
            }
        });

        btn_Clear.setText("Clear");
        btn_Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ClearMouseClicked(evt);
            }
        });

        btn_View.setText("View List");
        btn_View.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ViewMouseClicked(evt);
            }
        });

        lbl_Priority.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_Priority.setText("Priority");
        lbl_Priority.setPreferredSize(new java.awt.Dimension(80, 25));

        cb_Prio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose...", "0", "1", "2" }));
        cb_Prio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_PrioItemStateChanged(evt);
            }
        });

        cb_ArrivalTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose...", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        cb_ArrivalTime.setName(""); // NOI18N
        cb_ArrivalTime.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_ArrivalTimeItemStateChanged(evt);
            }
        });

        lbl_ArrivalTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_ArrivalTime.setText("Arrival Time");
        lbl_ArrivalTime.setPreferredSize(new java.awt.Dimension(80, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_AddProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(btn_View, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_ProcessName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_ProcessCycles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_Prio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ProcessName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ProcessCycles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_ArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_ArrivalTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_ProcessName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ProcessName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_ProcessCycles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ProcessCycles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_ArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_ArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_Prio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_AddProcess)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Clear)
                    .addComponent(btn_View))
                .addContainerGap())
        );

        cb_Algo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose...", "FCFS", "SJN/SJF", "Priority Scheduling", "SRT", "Round Robin" }));
        cb_Algo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_AlgoItemStateChanged(evt);
            }
        });

        btn_Go.setText("Execute Algo");
        btn_Go.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_GoMouseClicked(evt);
            }
        });
        btn_Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GoActionPerformed(evt);
            }
        });

        lbl_Quantum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_Quantum.setText("Quantum Time");
        lbl_Quantum.setPreferredSize(new java.awt.Dimension(80, 25));
        lbl_Quantum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_QuantumMouseClicked(evt);
            }
        });

        txt_Quantum.setName("txt_Cycles"); // NOI18N
        txt_Quantum.setPreferredSize(new java.awt.Dimension(100, 30));
        txt_Quantum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_QuantumFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_Quantum, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(txt_Quantum, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Go, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cb_Algo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cb_Algo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_Quantum, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Go)
                    .addComponent(txt_Quantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setEnabled(false);
        jScrollPane1.setFocusable(false);

        txt_Console.setColumns(20);
        txt_Console.setRows(5);
        txt_Console.setEnabled(false);
        txt_Console.setName(""); // NOI18N
        jScrollPane1.setViewportView(txt_Console);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_AlgoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_AlgoItemStateChanged
        // TODO add your handling code here:
        try{
            algo = (String)cb_Algo.getSelectedItem();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cb_AlgoItemStateChanged

    private void txt_ProcessNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ProcessNameFocusLost
        // TODO add your handling code here:
        try{
            processName = (String)txt_ProcessName.getText();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please input the process name");
        }
    }//GEN-LAST:event_txt_ProcessNameFocusLost

    private void txt_ProcessCyclesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ProcessCyclesFocusLost
        // TODO add your handling code here:
        try{
            processCycles = parseInt(txt_ProcessCycles.getText());
            if(processCycles <= 0){
                JOptionPane.showMessageDialog(null, "Please input a number");
                txt_ProcessCycles.setText("");
                processCycles = -1;
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please input a number");
            txt_ProcessCycles.setText("");
            processCycles = -1;
        }
    }//GEN-LAST:event_txt_ProcessCyclesFocusLost

    private void btn_AddProcessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AddProcessMouseClicked
        // TODO add your handling code here:
        if((!processName.isEmpty()) && (processCycles != -1)){
            if(priority == -1){
                priority = 0;
            }
            if(arrivalTime == -1){
                arrivalTime = 0;
            }
            Process p = new Process(processName, processCycles,arrivalTime,priority);
            processList.add(p);
            txt_Console.setText(txt_Console.getText() + "\nAdded Process '" + processName + "' -- " + processCycles + " cycles\n"
                                + "Arrival Time : " + arrivalTime + "\n"
                                + "Priority : " + priority);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please input a process");
        }
    }//GEN-LAST:event_btn_AddProcessMouseClicked

    private void btn_GoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_GoMouseClicked
        // TODO add your handling code here:
        try{
            if(processList.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please add a process");
            }
            else{
                switch(algo){
                    case "FCFS" :   FCFS algo0 = new FCFS(processList);
                                    aa.setEnabled(false);
                                    algo0.go();
                                    //JOptionPane.showMessageDialog(null, "Process Done!\nProcess List cleared!\n\nPlease check console for details");
                                    aa.setEnabled(true);
                                    clearAll();
                                    processList.clear();
                                    break;
                    case "SJN/SJF" : SJN algo1 = new SJN(processList);
                                    aa.setEnabled(false);
                                    algo1.go();
                                    //JOptionPane.showMessageDialog(null, "Process Done!\nProcess List cleared!\n\nPlease check console for details");
                                    aa.setEnabled(true);
                                    clearAll();
                                    processList.clear();
                                    break;
                    case "Priority Scheduling" : PSched algo2 = new PSched(processList);
                                    aa.setEnabled(false);
                                    algo2.go();
                                    //JOptionPane.showMessageDialog(null, "Process Done!\nProcess List cleared!\n\nPlease check console for details");
                                    aa.setEnabled(true);
                                    clearAll();
                                    processList.clear();
                                    break;
                    case "SRT" : SRT algo3 = new SRT(processList);
                                    aa.setEnabled(false);
                                    algo3.go();
                                    //JOptionPane.showMessageDialog(null, "Process Done!\nProcess List cleared!\n\nPlease check console for details"); 
                                    aa.setEnabled(true);
                                    clearAll();
                                    processList.clear();
                                    break;
                    case "Round Robin" : RoundRobin algo4 = new RoundRobin(processList,quantum);
                                    aa.setEnabled(false);
                                    algo4.go();
                                    //JOptionPane.showMessageDialog(null, "Process Done!\nProcess List cleared!\n\nPlease check console for details");  
                                    aa.setEnabled(true);
                                    clearAll();
                                    processList.clear();
                                    break;
                    case "choose..." : JOptionPane.showMessageDialog(null, "Please choose an algorithm"); cb_Algo.requestFocus();break;
                    default : System.out.println("lolwat"); break;
                } 
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please add a process");            
        }
    }//GEN-LAST:event_btn_GoMouseClicked

    private void btn_ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ClearMouseClicked
        // TODO add your handling code here:
        processList.clear();
        clearAll();
        
    }//GEN-LAST:event_btn_ClearMouseClicked

    private void btn_ViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ViewMouseClicked
        // TODO add your handling code here:
        StringBuilder listString = new StringBuilder();

        for(Process p : processList){
            listString.append("Process #").append(p.getArrivalTime())
                    .append("\nName: ").append(p.getName())
                    .append("\nCycles: ").append(p.getCycles())
                    .append("\nPriority: ").append(p.getPriority())
                    .append("\n\n");
        }
        JOptionPane.showMessageDialog(null, listString.toString());
    }//GEN-LAST:event_btn_ViewMouseClicked

    private void txt_QuantumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_QuantumFocusLost
        // TODO add your handling code here:
        try{
            quantum = parseInt(txt_Quantum.getText());
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please input a number");
            txt_Quantum.setText("");
            quantum = 1;
        }
    }//GEN-LAST:event_txt_QuantumFocusLost

    private void cb_PrioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_PrioItemStateChanged
        // TODO add your handling code here:
        try{
            priority = parseInt((String)cb_Prio.getSelectedItem());
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cb_PrioItemStateChanged

    private void cb_ArrivalTimeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_ArrivalTimeItemStateChanged
        // TODO add your handling code here:
        try{
            arrivalTime = parseInt((String)cb_ArrivalTime.getSelectedItem());
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cb_ArrivalTimeItemStateChanged

    private void lbl_QuantumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_QuantumMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_QuantumMouseClicked

    private void btn_GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_GoActionPerformed
    

    /**
     * @param args the command line arguments
     */
    
    public static AllocAlgos aa = new AllocAlgos();
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllocAlgos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllocAlgos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllocAlgos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllocAlgos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            aa.setVisible(true);
        });        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddProcess;
    private javax.swing.JButton btn_Clear;
    private javax.swing.JButton btn_Go;
    private javax.swing.JButton btn_View;
    private javax.swing.JComboBox<String> cb_Algo;
    private javax.swing.JComboBox<String> cb_ArrivalTime;
    private javax.swing.JComboBox<String> cb_Prio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_ArrivalTime;
    private javax.swing.JLabel lbl_Priority;
    private javax.swing.JLabel lbl_ProcessCycles;
    private javax.swing.JLabel lbl_ProcessName;
    private javax.swing.JLabel lbl_Quantum;
    private javax.swing.JTextArea txt_Console;
    private javax.swing.JTextField txt_ProcessCycles;
    private javax.swing.JTextField txt_ProcessName;
    private javax.swing.JTextField txt_Quantum;
    // End of variables declaration//GEN-END:variables
}
